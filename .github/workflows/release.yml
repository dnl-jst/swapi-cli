name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.2.3)'
        required: true
        type: string

permissions:
  contents: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Get version
        id: get_version
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi
          
      - name: Setup Dart SDK
        uses: dart-lang/setup-dart@v1
        with:
          sdk: stable
          
      - name: Install dependencies
        run: dart pub get
        
      - name: Run tests
        run: dart test
        
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          name: Star Wars CLI ${{ steps.get_version.outputs.version }}
          body: |
            # Star Wars CLI ${{ steps.get_version.outputs.version }}
            
            ## üåü Features
            - Explore the Star Wars universe from your command line
            - Access all 6 SWAPI endpoints: films, people, planets, species, vehicles, starships
            - Random element selection for discovery
            - Beautiful formatted output with emojis
            - German language support
            
            ## üì¶ Downloads
            Download the appropriate executable for your platform below.
            
            ## üöÄ Usage
            ```bash
            # Show help
            ./swapi --help
            
            # Random element from random endpoint
            ./swapi
            
            # Show random species
            ./swapi species
            
            # Show random film
            ./swapi films
            ```
            
            ## üìã Changelog
            See the commit history for detailed changes in this release.
            
            ---
            May the Force be with you! ‚≠ê
          draft: false
          prerelease: false

  build-release:
    name: Build Release Assets
    needs: release
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            asset_name: swapi-cli-linux
            executable_extension: ''
          - os: windows-latest
            asset_name: swapi-cli-windows
            executable_extension: '.exe'
          - os: macos-latest
            asset_name: swapi-cli-macos
            executable_extension: ''
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Dart SDK
        uses: dart-lang/setup-dart@v1
        with:
          sdk: stable
          
      - name: Install dependencies
        run: dart pub get
        
      - name: Build executable
        run: dart compile exe bin/swapi_cli.dart -o ${{ matrix.asset_name }}${{ matrix.executable_extension }}
        
      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.release.outputs.version }}
          files: ./${{ matrix.asset_name }}${{ matrix.executable_extension }}

  notify-release:
    name: Notify Release Success
    needs: [release, build-release]
    runs-on: ubuntu-latest
    if: success()
    
    steps:
      - name: Success notification
        run: |
          echo "üéâ Release ${{ needs.release.outputs.version }} completed successfully!"
          echo "‚úÖ Release created"
          echo "‚úÖ Executables built for Linux, Windows, and macOS"
          echo "‚úÖ Assets uploaded to GitHub Release"
          echo ""
          echo "Users can now download the latest version from:"
          echo "https://github.com/${{ github.repository }}/releases/tag/${{ needs.release.outputs.version }}"
